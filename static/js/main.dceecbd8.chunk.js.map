{"version":3,"sources":["api.ts","theme.ts","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","routes/Price.tsx","Router.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","theme","bgColor","textColor","accentColor","accentColor2","Chart","coinId","useParams","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","mode","colors","chart","height","width","background","stroke","curve","yaxis","show","xaxis","labels","axisTicks","axisBorder","color","categories","time_close","slice","fill","gradient","gradientToColors","stops","tooltip","y","formatter","value","toFixed","Container","styled","div","Loader","span","props","Header","header","GoBack","h1","Title","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinPrice","priceLoading","priceData","loading","Helmet","to","rank","symbol","quotes","USD","description","total_supply","max_supply","id","CoinsList","ul","li","Img","img","Coins","coin","alt","src","toLocaleLowerCase","Price","Router","path","element","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.dceecbd8.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\n// All Coins\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\n// Coin Info\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\n// Coin Price\r\nexport function fetchCoinPrice(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\n// Coin History (4 weeks)\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 28; // 28 days\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#222222\",\r\n  textColor: \" #FAF8FF\",\r\n  accentColor: \"#00C896\",\r\n  accentColor2: \"#FF00FF\",\r\n};\r\n","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { theme } from \"../theme\";\r\n\r\ninterface CoinHistoryData {\r\n  time_open: \"string\";\r\n  time_close: \"string\";\r\n  open: number;\r\n  close: number;\r\n  high: number;\r\n  low: number;\r\n  market_cap: number;\r\n  volume: number;\r\n}\r\n\r\nfunction Chart() {\r\n  const { coinId } = useParams();\r\n  const { isLoading, data } = useQuery<CoinHistoryData[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId!),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            colors: [`${theme.accentColor}`],\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              background: \"transparent\",\r\n            },\r\n            stroke: {\r\n              curve: \"stepline\",\r\n              width: 3,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              labels: {\r\n                show: false,\r\n              },\r\n              axisTicks: {\r\n                show: false,\r\n              },\r\n              axisBorder: {\r\n                color: `${theme.accentColor2}`,\r\n              },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close.slice(0, 10)),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: {\r\n                gradientToColors: [`${theme.accentColor2}`],\r\n                stops: [0, 100],\r\n              },\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(3)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Outlet, useLocation, useParams } from \"react-router\";\r\nimport { Link, useMatch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinPrice } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 1rem;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: max(min(1.5rem, 20px), 15px);\r\n  color: ${(props) => props.theme.accentColor2};\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst GoBack = styled.h1`\r\n  font-size: max(min(3rem, 40px), 20px);\r\n  color: ${(props) => props.theme.accentColor2};\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: max(min(3rem, 40px), 20px);\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  span {\r\n    font-size: max(min(1.5rem, 20px), 15px);\r\n    color: ${(props) => props.theme.accentColor};\r\n  }\r\n  span:first-child {\r\n    font-size: max(min(1rem, 15px), 12px);\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 0.5rem;\r\n    color: ${(props) => props.theme.accentColor2};\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 1rem 0;\r\n  font-size: max(min(1.5rem, 20px), 15px);\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 2rem 0;\r\n  gap: 1rem;\r\n`;\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: max(min(1rem, 15px), 12px);\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 1rem 0;\r\n  border-radius: 1rem;\r\n  color: ${(props) => props.theme.accentColor2};\r\n  a {\r\n    display: block;\r\n    text-decoration: ${(props) => (props.isActive ? \"underline\" : \"none\")};\r\n  }\r\n`;\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams();\r\n  const { state } = useLocation();\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId!),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const { isLoading: priceLoading, data: priceData } = useQuery<PriceData>(\r\n    [\"price\", coinId],\r\n    () => fetchCoinPrice(coinId!)\r\n  );\r\n\r\n  const loading = infoLoading || priceLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Link to=\"/\">\r\n          <GoBack>&larr;</GoBack>\r\n        </Link>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${priceData?.quotes.USD.price.toFixed(4)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Supply:</span>\r\n              <span>{priceData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{priceData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to=\"chart\" state={{ id: coinId }}>\r\n                Chart\r\n              </Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to=\"price\">Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 1rem;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: max(min(1.5rem, 20px), 15px);\r\n  color: ${(props) => props.theme.accentColor2};\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: max(min(3rem, 40px), 20px);\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 1rem;\r\n  margin-bottom: 0.5rem;\r\n  font-size: max(min(1.5rem, 20px), 15px);\r\n  a {\r\n    transition: color 0.1s ease-in-out;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1rem;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor2};\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  min-width: 30px;\r\n  min-height: 30px;\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\ninterface CoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Crypto Coin</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>Crypto Coin</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\r\n                <Img\r\n                  alt={coin.name}\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLocaleLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","function Price() {\r\n  return <h1>Price Screen</h1>;\r\n}\r\n\r\nexport default Price;\r\n","import { HashRouter, Routes, Route } from 'react-router-dom';\r\nimport Chart from './routes/Chart';\r\nimport Coin from './routes/Coin';\r\nimport Coins from './routes/Coins';\r\nimport Price from './routes/Price';\r\n\r\nfunction Router() {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path='/:coinId/*' element={<Coin />}>\r\n          <Route path='chart' element={<Chart />} />\r\n          <Route path='price' element={<Price />} />\r\n        </Route>\r\n        <Route path='/' element={<Coins />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\n\r\n// reset styles\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nhtml {\r\n  font-size: 2vmin;\r\n}\r\nbody {\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: inherit\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Router />\r\n      <ReactQueryDevtools initialIsOpen={true} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { theme } from \"./theme\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </QueryClientProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}